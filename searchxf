#!/bin/bash
# ---------------------------- search manual pages  --------------------------- #

# ----------- check if fzf and apropos are installed, install if not ---------- #
set -eou pipefail
my_reqs=("fzf" "apropos")

for each_single in "${my_reqs[@]}"; do
	if ! command -v "$each_single" &>/dev/null; then
		printf "\n\t%s not found\n" "$each_single"
# -------------------------- do you want to install? -------------------------- #
		read -p "Would you like to install?: " -n 1 -r
		if [ "$REPLY" =~ ^[Yy]$ ]; then
			if [ -d "/etc/apt" ]; then
				sudo apt install "$each_single" -y || exit 1
			elif [ -d "/etc/pacman.d" ]; then
				sudp pacman -S "$each_single" || exit 1
			else
				printf "\n\t\tpackage not found\n\tuse your pkg manager to install %s\n" "$each_single" && exit 1
			fi
		else
			printf "exiting program" && exit 0
		fi
	fi
done

# ----------------------------------- server ---------------------------------- #
# ----------------------- get command or keyword/phrase ----------------------- #
read -r -p "my_query: " my_query
[ "$my_query" ] || exit 1

# ----------------------- check if command is a builtin ----------------------- #
if [ $(type -ta "$my_query" | head -1) == "builtin" ]; then
	man "$(echo "$SHELL" | awk -F'/' '{print $NF}')" 2>&1 | \less "+/$my_query\ \[" || exit 1

# ---------------------- check if there is not a manpage ---------------------- #
elif [ $(apropos "$my_query" &>/dev/null;echo "$?") == "16" ]; then
	printf "%s\n" "Unable to find man with keyword/phrase or builtin command to lookup." && exit 16

# ------------------------- check if there is manpage ------------------------- #
elif [ $(apropos "$my_query" &>/dev/null;echo "$?") == "0" ]; then
	my_selected=$(apropos "$my_query" | sort -u | fzf --border --margin=5% --color=dark --height=100% --reverse)
# -------------------------- select and open manpage -------------------------- #
	if [ "$my_selected" ]; then
		man "$(echo -e  "$my_selected" | tr -d ' ' | awk -F'(' '{print $1"."$2}' | cut -d ')' -f 1)" || exit 1
	fi
else
	printf "%s\n" "Unable to complete request for some reason" && exit 1
fi
exit 0

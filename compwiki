#!/bin/bash
# -------------------- way to grep and disply my wiki notes ------------------- #


set -eou pipefail
# set -x
#clear
# cd to documents wiki
cd "${HOME}"/.config/vimwiki/docs || exit 1
while true; do
#	get all the files with the specified pattern, can us regex here
	find_files="$(/usr/bin/grep -HRniEI "${*}" ./computer ./security | /usr/bin/awk -F ':' '{print $1}' | sort -u)"
#	exit if no files found with matching pattern
	if [ -z "${find_files}" ]; then 
		printf "no match found" && exit 1
	fi

# comment if not using 'exa' or 'bat'
# 	if files are found with matching pattern display them with fzf

	my_selection="$(printf '%s' "${find_files}" | /usr/bin/fzf -m --header-first --header='compWiki:' --height 100% --reverse --info hidden --prompt 'PREVIEW:' --preview ' file_pre="$(echo $(echo {}))";
            echo;
            exa -a --color=always "${file_pre}";
            bat --style=numbers --theme=ansi --color=always {} 2>/dev/null' --bind alt-j:preview-down,alt-k:preview-up --preview-window=right:70%)"

# uncomment if not using 'exa' or 'bat'

# 	my_selection="$(printf '%s' "${find_files}" | /usr/bin/fzf -m --header-first --header='compWiki:' --height 100% --reverse --info hidden --prompt 'PREVIEW:' --preview ' file_pre="$(echo $(echo {}))";
#             echo;
#             /bin/ls -a --color=always "${file_pre}";
#             /bin/cat --color=always {} 2>/dev/null' --bind alt-j:preview-down,alt-k:preview-up --preview-window=right:70%)"

# 	depending on the type of file  selected open with proper program
    if [ -f "${my_selection}" ]; then
        for my_file in "${my_selection}"; do
# 			the_selection="$(echo "${my_selection}" | sed 's/\.\//docs\//')"
			the_selection="$(echo "${my_selection}" | sed 's|\./|/docs/|; s|\.[^.]*$||')"
# 			echo "${my_file}"
#             if [ "${my_file}" == *.md ]; then
            #if [ "${my_file}" == *.txt ] || [ "${my_file}" == *.sh ] || [ "${my_file}" == *.md ] || [ "${my_file}" == *.lua ] || [ "${my_file}" == *.conf ] || [ "${my_file}" == .*rc ] || [ "${my_file}" == *rc ] || [ "${my_file}" == autostart ] || [ "${my_file}" == *.log ] || [ "${my_file}" == *.go ] || [ "${my_file}" == *.mod ]; then
				#### this statement is false some how!!!!
				# echo "${the_selection}"
# 				continue
#                 /opt/nvim-linux64/bin/nvim -p -c "VimwikiIndex" -c "VimwikiGoto "${the_selection}"" || exit 1
            if [ "${my_file}" == *.docx ] || [ "${my_file}" == *.odt ]; then
#             elif [ "${my_file}" == *.docx ] || [ "${my_file}" == *.odt ]; then
                /usr/bin/libreoffice "${the_selection}" || exit 1
            elif [ "${my_file}" == *.jpg ] || [ "${my_file}" == *.png ]; then
                /usr/bin/sxiv "${the_selection}" || exit 1
            elif [ "${my_file}" == *.xcf ]; then
                /usr/bin/gimp "${the_selection}" || exit 1
            else
#                 echo "${the_selection}"
                /opt/nvim-linux64/bin/nvim -p -c "VimwikiIndex" -c "VimwikiGoto "${the_selection}"" || exit 1
            fi
        done
    fi
done
# go back to where you were last
cd "${OLDPWD}" || exit 1
exit 0
